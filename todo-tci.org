* Dataviewer part
** TODO Finish porting
** Finish InputReader
*** TODO Add better handling of comment section
*** TODO Add exception handling
*** TODO Add reading sample length and other params (mass, density, porosity?)
** TODO Save state of the slider
** DONE Add cross-hair option
** Plugin setup
*** signals
**** TODO after updating plot
plugin plots itself if visible.
when show plugin button is pressed, plugin can update plot in inself.
so we don't have to draw everything each time.
**** TODO after setting GU
each plugin adds entries to dataviewer menus
*** Plugin list file
**** TODO Way to load plugins
dataviewer init method will read the file and initialize the plugins
**** TODO Paths to plugins
* Sonic part
** TODO Start porting to Python3
** TODO Finish porting to Python3
** TODO dt can be different in each sonic file
** TODO Shifting to the transmitter signal for each track
   May be different start-recording times and scaling
** TODO Better automated arrival picking
   idea: create lines base on color gradients (maybe Hough
   transform), make the user pick the line that corresponds
   to the arrivals and another that corresponds to transmitting.
** TODO (Maybe) Better hand arrival picking
** TODO Computation of attenuation
** TODO Arrival-time algorithm widget appears after asking for arrival times
* General
** TODO Make sure works on Win
** TODO Make sure runs on other Linux computers
   Send to Vadya/Vasya, ask to run
** TODO Learn how to handle relative paths
** TODO Make Windows executable
** DONE Add .gitignore
** DONE Add Readme.md
** TODO Make more elaborated README
   Add Images, usage tips and other stuff
** TODO Add folder with an example experiment
** DONE Submit to GitHub
** DONE Add a license file
** TODO Add unit testing
        Also, figure out how to do it properly...
        1. make sure it doesn't break
        2. make sure arrival values are correct

** TODO Rename Colors.py into Styles.py
   and put all the stylystic things in there
   (such as LabelStyle in the dataviewer class)
